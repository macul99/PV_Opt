import openai
import autogen
import os
import tempfile
import json
import chromadb
import autogen

from autogen import (
    ConversableAgent,
    UserProxyAgent, # human_input_mode=ALWAYS and llm_config=False
    AssistantAgent, # human_input_mode=NEVER and code_execution_config=False
    GroupChatManager, # groupchat, llm_config
    GroupChat, # agents, messages, max_round
)
from autogen.coding import LocalCommandLineCodeExecutor, DockerCommandLineCodeExecutor

import autogen
from autogen.agentchat.contrib.retrieve_assistant_agent import RetrieveAssistantAgent
from autogen.agentchat.contrib.retrieve_user_proxy_agent import RetrieveUserProxyAgent

# Accepted file formats for that can be stored in
# a vector database instance
from autogen.retrieve_utils import TEXT_FORMATS

################ not needed when deployed #######################
import nest_asyncio # comment out when not in notebook
nest_asyncio.apply() # comment out when not in notebook

from dotenv import find_dotenv, load_dotenv # require python-dotenv package
load_dotenv(find_dotenv())
#################################################################

PREDEFINE_QUERY = {
    "table_site_meta": '''let table_site_meta = database('solaros_site_metadata').read_site_meta()
| join kind=inner (database('solaros_site_metadata').read_site_and_subsite_meta() | summarize ['DC Capacity (kWp)']=sum(capacity_dc), ['AC Capacity (kWac)']=sum(capacity_ac) by site_id) on site_id
| project ['Site Id']=site_id, ['Site Code']=site_code, ['Site Name']=site_name, ['Farm Type']=farm_type, ['Project Name']=project_name,
['Country Code']=country_code, ['Time Zone']=timezone, ['Latitude']=latitude, ['Longitude']=longitude, ['DC Capacity (kWp)'], ['AC Capacity (kWac)']
;''',
    
}

TABLE_SCHEMA = {
    "table_site_meta" : {
        "description" : "store all kinds of site related meta data",
        "primary_key" : ["['Site Id']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Site Code']" : ['string', 'Site code for the solar site'],
            "['Site Name']" : ['string', 'Name for the solar site'],
            "['Farm Type']" : ['string', 'Farm type for the solar site'],
            "['Project Name']" : ['string', 'Project name for the solar site'],
            "['Country Code']" : ['string', 'Two letter code to represent the country where the solar site is located. EG: SG is country code for SG'],
            "['Time Zone']" : ['string', 'Time Zone for where the solar site is located, such as "Asia/Singapore"'],
            "['Latitude']" : ['real', 'Latitude of the site location'],
            "['Longitude']" : ['real', 'Longitude of the site location'],
            "['DC Capacity (kWp)']" : ['real', 'Total DC Capacity of installed PV Panels for the solar site, unit in kWp'],
            "['AC Capacity (kWac)']" : ['real', 'Total AC Capacity of installed inverters for the solar site, unit in kWac'],
        }
    },
    "table_site_performance_daily" : {
        "description" : "store all performance metrics of each site on daily basis.",
        "primary_key" : ["['Site Id']","['Date']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Date']" : ['string', 'Date in YYYY-MM-DD format'],
            "['Month']" : ['string', 'Month in YYYY-MM format'],
            "['Year']" : ['string', 'Year in YYYY format'],
            "['DC Capacity (kWp)']" : ['real', 'DC capacity of all panels connected to the site, unit in kWp'],
            "['AC Energy (kWh)']" : ['real', 'Daily AC energy generation for each site'],
            "['DC Energy (kWh)']" : ['real', 'Daily DC energy generation for each site'],
            "['Irradiation (kWh/m2)']" : ['real', 'Daily irradiation, unit is kWh/m2'],
            "['Thermal Loss (kWh)']" : ['real', 'Daily thermal loss incured by the site, unit in kWh'],
            "['Total Yield Including Thermal Loss (kWh)']" : ['real', 'Daily total yield for the site including thermal loss, unit in kWh'],
            "['Inverter Loss (kWh)']" : ['real', 'Daily Inverter loss incured by the site, unit in kWh'],
            "['Total Yield Including Inverter Loss (kWh)']" : ['real', 'Daily total yield for the site including Inverter loss, unit in kWh'],
            "['Shading Loss (kWh)']" : ['real', 'Daily Shading loss incured by the site, unit in kWh'],
            "['Total Yield Including Shading Loss (kWh)']" : ['real', 'Daily total yield for the site including Shading loss, unit in kWh'],
            "['Soiling Loss (kWh)']" : ['real', 'Daily Soiling loss incured by the site, unit in kWh'],
            "['Total Yield Including Soiling Loss (kWh)']" : ['real', 'Daily total yield for the site including Soiling loss, unit in kWh'],
            "['Clipping Loss (kWh)']" : ['real', 'Daily Clipping loss incured by the site, unit in kWh'],
            "['Total Yield Including Clipping Loss (kWh)']" : ['real', 'Daily total yield for the site including Clipping loss, unit in kWh'],
            "['Downtime Loss (kWh)']" : ['real', 'Daily Downtime loss incured by the site, unit in kWh'],
            "['Total Yield Including Downtime Loss (kWh)']" : ['real', 'Daily total yield for the site including Downtime loss, unit in kWh'],
            "['Curtailment Loss (kWh)']" : ['real', 'Daily Curtailment loss incured by the site, unit in kWh'],
            "['Total Yield Including Curtailment Loss (kWh)']" : ['real', 'Daily total yield for the site including Curtailment loss, unit in kWh'],
            "['Derating Loss (kWh)']" : ['real', 'Daily Derating loss incured by the site, unit in kWh'],
            "['Total Yield Including Derating Loss (kWh)']" : ['real', 'Daily total yield for the site including Derating loss, unit in kWh'],
        }
    },
    "table_pyranometer_meta" : {
        "description" : "store all meta data related to pyranometer sensor.",
        "primary_key" : ["['Site Id']","['Subsite Id']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Subsite Id']" : ['string', 'UID for the subsite. One solar site can have one or more than one subsites.'],
            "['Subite Name']" : ['string', 'Subsite Name for the subsite where the pyranometer is installed'],
            "['Pyranometer Name']" : ['string', 'Name for the pyranometer sensor'],
            "['Pyranometer SN']" : ['string', 'Serial number for the pyranometer sensor'],
            "['Pyranometer Model']" : ['string', 'Model name for the pyranometer sensor'],
            "['Pyranometer Surface Tilt Angle']" : ['real', 'Surface tilt angle of the pyranometer sensor'],
            "['Pyranometer Surface Azimuth Angle']" : ['real', 'Surface azimuth angle of the pyranometer sensor'],
        }
    },
    "table_inverter_meta" : {
        "description" : "store all meta data related to inverter.",
        "primary_key" : ["['Site Id']","['Subsite Id']","['Inverter Id']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Subsite Id']" : ['string', 'UID for the subsite. One solar site can have one or more than one subsites.'],
            "['Inverter Id']" : ['int', 'UID for the inverter installed in a solar site'],
            "['Inverter Name']" : ['string', 'Name for the inverter'],
            "['Inverter SN']" : ['string', 'Serial number for the inverter'],
            "['INverter Model']" : ['string', 'Model name for the inverter'],
            "['Rated Power (kW)']" : ['real', 'Rated inverter output power, unit in kW'],
            "['Max Power (kW)']" : ['real', 'Maximum inverter output power, unit in kW'],
            "['AC Capacity (kWac)']" : ['real', 'AC capacity of the inverter, unit in kWac'],
        }
    },
    "table_pv_panel_string_meta" : {
        "description" : "store all meta data related to each PV panel string connected to inverter.",
        "primary_key" : ["['Site Id']","['Subsite Id']","['Inverter Id']","['Inverter Input']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Subsite Id']" : ['string', 'UID for the subsite. One solar site can have one or more than one subsites.'],
            "['Inverter Id']" : ['int', 'UID for the inverter installed in a solar site'],
            "['Inverter Input']" : ['int', 'Inverter input number. Each inverter has multiple inputs'],
            "['Panel Model']" : ['string', 'Model name for the PV panel'],
            "['Panel Count']" : ['int', 'Number of PV panels installed in the inverter input'],
            "['Panel Power (W)']" : ['real', 'Rated output power for each PV panel, unit in W'],
            "['Panel Surface Tilt Angle']" : ['real', 'Surface tilt angle of installed PV panels'],
            "['Panel Surface Azimuth Angle']" : ['real', 'Surface azimuth angle of installed PV panels'],
            "['DC Capacity (kWp)']" : ['real', 'DC capacity of the whole string, unit in kWp'],
        }
    },
    "table_inverter_performance_daily" : {
        "description" : "store all performance metrics of each inverter on daily basis.",
        "primary_key" : ["['Site Id']","['Subsite Id']","['Inverter Id']","['Date']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Subsite Id']" : ['string', 'UID for the subsite. One solar site can have one or more than one subsites.'],
            "['Inverter Id']" : ['int', 'UID for the inverter installed in a solar site'],
            "['Date']" : ['string', 'Date in YYYY-MM-DD format'],
            "['Month']" : ['string', 'Month in YYYY-MM format'],
            "['Year']" : ['string', 'Year in YYYY format'],
            "['DC Capacity (kWp)']" : ['real', 'DC capacity of all panels connected to the inverter, unit in kWp'],
            "['AC Energy (kWh)']" : ['real', 'Daily AC energy generation for each inverter'],
            "['DC Energy (kWh)']" : ['real', 'Daily DC energy generation for each inverter'],
            "['Irradiation (kWh/m2)']" : ['real', 'Daily irradiation, unit is kWh/m2'],
            "['Thermal Loss (kWh)']" : ['real', 'Daily thermal loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Thermal Loss (kWh)']" : ['real', 'Daily total yield for the inverter including thermal loss, unit in kWh'],
            "['Inverter Loss (kWh)']" : ['real', 'Daily Inverter loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Inverter Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Inverter loss, unit in kWh'],
            "['Shading Loss (kWh)']" : ['real', 'Daily Shading loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Shading Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Shading loss, unit in kWh'],
            "['Soiling Loss (kWh)']" : ['real', 'Daily Soiling loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Soiling Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Soiling loss, unit in kWh'],
            "['Clipping Loss (kWh)']" : ['real', 'Daily Clipping loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Clipping Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Clipping loss, unit in kWh'],
            "['Downtime Loss (kWh)']" : ['real', 'Daily Downtime loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Downtime Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Downtime loss, unit in kWh'],
            "['Curtailment Loss (kWh)']" : ['real', 'Daily Curtailment loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Curtailment Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Curtailment loss, unit in kWh'],
            "['Derating Loss (kWh)']" : ['real', 'Daily Derating loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Derating Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Derating loss, unit in kWh'],
        }
    },
}

print(TABLE_SCHEMA)


PREDEFINE_QUERY = {
    "table_site_meta": '''let table_site_meta = database('solaros_site_metadata').read_site_meta()
| join kind=inner (database('solaros_site_metadata').read_site_and_subsite_meta() | summarize ['DC Capacity (kWp)']=sum(capacity_dc), ['AC Capacity (kWac)']=sum(capacity_ac) by site_id) on site_id
| project ['Site Id']=site_id, ['Site Code']=site_code, ['Site Name']=site_name, ['Farm Type']=farm_type, ['Project Name']=project_name,
['Country Code']=country_code, ['Time Zone']=timezone, ['Latitude']=latitude, ['Longitude']=longitude, ['DC Capacity (kWp)'], ['AC Capacity (kWac)']
;''',
    
}

TABLE_SCHEMA = {
    "table_site_meta" : {
        "description" : "store all kinds of site related meta data",
        "primary_key" : ["['Site Id']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Site Code']" : ['string', 'Site code for the solar site'],
            "['Site Name']" : ['string', 'Name for the solar site'],
            "['Farm Type']" : ['string', 'Farm type for the solar site'],
            "['Project Name']" : ['string', 'Project name for the solar site'],
            "['Country Code']" : ['string', 'Two letter code to represent the country where the solar site is located. EG: SG is country code for SG'],
            "['Time Zone']" : ['string', 'Time Zone for where the solar site is located, such as "Asia/Singapore"'],
            "['Latitude']" : ['real', 'Latitude of the site location'],
            "['Longitude']" : ['real', 'Longitude of the site location'],
            "['DC Capacity (kWp)']" : ['real', 'Total DC Capacity of installed PV Panels for the solar site, unit in kWp'],
            "['AC Capacity (kWac)']" : ['real', 'Total AC Capacity of installed inverters for the solar site, unit in kWac'],
        }
    },
    "table_site_performance_daily" : {
        "description" : "store all performance metrics of each site on daily basis.",
        "primary_key" : ["['Site Id']","['Date']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Date']" : ['string', 'Date in YYYY-MM-DD format'],
            "['Month']" : ['string', 'Month in YYYY-MM format'],
            "['Year']" : ['string', 'Year in YYYY format'],
            "['DC Capacity (kWp)']" : ['real', 'DC capacity of all panels connected to the site, unit in kWp'],
            "['AC Energy (kWh)']" : ['real', 'Daily AC energy generation for each site'],
            "['DC Energy (kWh)']" : ['real', 'Daily DC energy generation for each site'],
            "['Irradiation (kWh/m2)']" : ['real', 'Daily irradiation, unit is kWh/m2'],
            "['Thermal Loss (kWh)']" : ['real', 'Daily thermal loss incured by the site, unit in kWh'],
            "['Total Yield Including Thermal Loss (kWh)']" : ['real', 'Daily total yield for the site including thermal loss, unit in kWh'],
            "['Inverter Loss (kWh)']" : ['real', 'Daily Inverter loss incured by the site, unit in kWh'],
            "['Total Yield Including Inverter Loss (kWh)']" : ['real', 'Daily total yield for the site including Inverter loss, unit in kWh'],
            "['Shading Loss (kWh)']" : ['real', 'Daily Shading loss incured by the site, unit in kWh'],
            "['Total Yield Including Shading Loss (kWh)']" : ['real', 'Daily total yield for the site including Shading loss, unit in kWh'],
            "['Soiling Loss (kWh)']" : ['real', 'Daily Soiling loss incured by the site, unit in kWh'],
            "['Total Yield Including Soiling Loss (kWh)']" : ['real', 'Daily total yield for the site including Soiling loss, unit in kWh'],
            "['Clipping Loss (kWh)']" : ['real', 'Daily Clipping loss incured by the site, unit in kWh'],
            "['Total Yield Including Clipping Loss (kWh)']" : ['real', 'Daily total yield for the site including Clipping loss, unit in kWh'],
            "['Downtime Loss (kWh)']" : ['real', 'Daily Downtime loss incured by the site, unit in kWh'],
            "['Total Yield Including Downtime Loss (kWh)']" : ['real', 'Daily total yield for the site including Downtime loss, unit in kWh'],
            "['Curtailment Loss (kWh)']" : ['real', 'Daily Curtailment loss incured by the site, unit in kWh'],
            "['Total Yield Including Curtailment Loss (kWh)']" : ['real', 'Daily total yield for the site including Curtailment loss, unit in kWh'],
            "['Derating Loss (kWh)']" : ['real', 'Daily Derating loss incured by the site, unit in kWh'],
            "['Total Yield Including Derating Loss (kWh)']" : ['real', 'Daily total yield for the site including Derating loss, unit in kWh'],
        }
    },
    "table_pyranometer_meta" : {
        "description" : "store all meta data related to pyranometer sensor.",
        "primary_key" : ["['Site Id']","['Subsite Id']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Subsite Id']" : ['string', 'UID for the subsite. One solar site can have one or more than one subsites.'],
            "['Subite Name']" : ['string', 'Subsite Name for the subsite where the pyranometer is installed'],
            "['Pyranometer Name']" : ['string', 'Name for the pyranometer sensor'],
            "['Pyranometer SN']" : ['string', 'Serial number for the pyranometer sensor'],
            "['Pyranometer Model']" : ['string', 'Model name for the pyranometer sensor'],
            "['Pyranometer Surface Tilt Angle']" : ['real', 'Surface tilt angle of the pyranometer sensor'],
            "['Pyranometer Surface Azimuth Angle']" : ['real', 'Surface azimuth angle of the pyranometer sensor'],
        }
    },
    "table_inverter_meta" : {
        "description" : "store all meta data related to inverter.",
        "primary_key" : ["['Site Id']","['Subsite Id']","['Inverter Id']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Subsite Id']" : ['string', 'UID for the subsite. One solar site can have one or more than one subsites.'],
            "['Inverter Id']" : ['int', 'UID for the inverter installed in a solar site'],
            "['Inverter Name']" : ['string', 'Name for the inverter'],
            "['Inverter SN']" : ['string', 'Serial number for the inverter'],
            "['INverter Model']" : ['string', 'Model name for the inverter'],
            "['Rated Power (kW)']" : ['real', 'Rated inverter output power, unit in kW'],
            "['Max Power (kW)']" : ['real', 'Maximum inverter output power, unit in kW'],
            "['AC Capacity (kWac)']" : ['real', 'AC capacity of the inverter, unit in kWac'],
        }
    },
    "table_pv_panel_string_meta" : {
        "description" : "store all meta data related to each PV panel string connected to inverter.",
        "primary_key" : ["['Site Id']","['Subsite Id']","['Inverter Id']","['Inverter Input']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Subsite Id']" : ['string', 'UID for the subsite. One solar site can have one or more than one subsites.'],
            "['Inverter Id']" : ['int', 'UID for the inverter installed in a solar site'],
            "['Inverter Input']" : ['int', 'Inverter input number. Each inverter has multiple inputs'],
            "['Panel Model']" : ['string', 'Model name for the PV panel'],
            "['Panel Count']" : ['int', 'Number of PV panels installed in the inverter input'],
            "['Panel Power (W)']" : ['real', 'Rated output power for each PV panel, unit in W'],
            "['Panel Surface Tilt Angle']" : ['real', 'Surface tilt angle of installed PV panels'],
            "['Panel Surface Azimuth Angle']" : ['real', 'Surface azimuth angle of installed PV panels'],
            "['DC Capacity (kWp)']" : ['real', 'DC capacity of the whole string, unit in kWp'],
        }
    },
    "table_inverter_performance_daily" : {
        "description" : "store all performance metrics of each inverter on daily basis.",
        "primary_key" : ["['Site Id']","['Subsite Id']","['Inverter Id']","['Date']"],
        "schema" : {
            "['Site Id']" : ['int', 'UID for the solar site'],
            "['Subsite Id']" : ['string', 'UID for the subsite. One solar site can have one or more than one subsites.'],
            "['Inverter Id']" : ['int', 'UID for the inverter installed in a solar site'],
            "['Date']" : ['string', 'Date in YYYY-MM-DD format'],
            "['Month']" : ['string', 'Month in YYYY-MM format'],
            "['Year']" : ['string', 'Year in YYYY format'],
            "['DC Capacity (kWp)']" : ['real', 'DC capacity of all panels connected to the inverter, unit in kWp'],
            "['AC Energy (kWh)']" : ['real', 'Daily AC energy generation for each inverter'],
            "['DC Energy (kWh)']" : ['real', 'Daily DC energy generation for each inverter'],
            "['Irradiation (kWh/m2)']" : ['real', 'Daily irradiation, unit is kWh/m2'],
            "['Thermal Loss (kWh)']" : ['real', 'Daily thermal loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Thermal Loss (kWh)']" : ['real', 'Daily total yield for the inverter including thermal loss, unit in kWh'],
            "['Inverter Loss (kWh)']" : ['real', 'Daily Inverter loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Inverter Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Inverter loss, unit in kWh'],
            "['Shading Loss (kWh)']" : ['real', 'Daily Shading loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Shading Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Shading loss, unit in kWh'],
            "['Soiling Loss (kWh)']" : ['real', 'Daily Soiling loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Soiling Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Soiling loss, unit in kWh'],
            "['Clipping Loss (kWh)']" : ['real', 'Daily Clipping loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Clipping Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Clipping loss, unit in kWh'],
            "['Downtime Loss (kWh)']" : ['real', 'Daily Downtime loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Downtime Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Downtime loss, unit in kWh'],
            "['Curtailment Loss (kWh)']" : ['real', 'Daily Curtailment loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Curtailment Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Curtailment loss, unit in kWh'],
            "['Derating Loss (kWh)']" : ['real', 'Daily Derating loss incured by the inverter, unit in kWh'],
            "['Total Yield Including Derating Loss (kWh)']" : ['real', 'Daily total yield for the inverter including Derating loss, unit in kWh'],
        }
    },
}

print(TABLE_SCHEMA)


from typing import Annotated, Dict

kql_writer = ConversableAgent(
    "kql_writer",
    llm_config={"config_list": [LLM_CFG_AZURE_GPT4]},
    system_message="You are good at writing KQL queries."
    ""
    "Following below rules when writing KQL queries:"
    "1. Use ['Column Name'] as the format of column name in the KQL query"
    "2. When calculate ['Performance Ratio'], always use formula as ['Performance Ratio']=sum(['AC Energy (kWh)'])/sum(['Irradiation (kWh/m2)']*['DC Capacity (kWp)'])"
    "3. When calculate ['Specific Yield'], always use formula as ['Specific Yield']=sum(['AC Energy (kWh)'])/sum(['DC Capacity (kWp)'])"
    "4. When calculate ['Thermal Loss (%)'], always use formula as ['Thermal Loss (%)']=100*sum(['Thermal Loss (kWh)'])/sum(['Total Yield Including Thermal Loss (kWh)'])"
    "5. When calculate ['Inverter Loss (%)'], always use formula as ['Inverter Loss (%)']=100*sum(['Inverter Loss (kWh)'])/sum(['Total Yield Including Inverter Loss (kWh)'])"
    "6. When calculate ['Shading Loss (%)'], always use formula as ['Shading Loss (%)']=100*sum(['Shading Loss (kWh)'])/sum(['Total Yield Including Shading Loss (kWh)'])"
    "7. When calculate ['Soiling Loss (%)'], always use formula as ['Soiling Loss (%)']=100*sum(['Soiling Loss (kWh)'])/sum(['Total Yield Including Soiling Loss (kWh)'])"
    "8. When calculate ['Clipping Loss (%)'], always use formula as ['Clipping Loss (%)']=100*sum(['Clipping Loss (kWh)'])/sum(['Total Yield Including Clipping Loss (kWh)'])"
    "9. When calculate ['Downtime Loss (%)'], always use formula as ['Downtime Loss (%)']=100*sum(['Downtime Loss (kWh)'])/sum(['Total Yield Including Downtime Loss (kWh)'])"
    "10. When calculate ['Curtailment Loss (%)'], always use formula as ['Curtailment Loss (%)']=100*sum(['Curtailment Loss (kWh)'])/sum(['Total Yield Including Curtailment Loss (kWh)'])"
    "11. When calculate ['Derating Loss (%)'], always use formula as ['Derating Loss (%)']=100*sum(['Derating Loss (kWh)'])/sum(['Total Yield Including Derating Loss (kWh)'])"
    "12. When need to include unique columns in meta tables, join with the meta table at the last stage of the query, then finally project all the necessary columns as final results."
    "13. Always get a list of ['Site Id'] using table_site_meta based on user question, and assign it to variable 'var_site_id_list'. If user question does not require to know ['Site Id'], skip this step."
    "14. Always use 'var_site_id_list' if it is available"
    ""
    "Always respond with a function call to execute_kql().",
    #is_termination_msg=check_termination,
    human_input_mode="ALWAYS",
)
user_proxy = UserProxyAgent("user_proxy", human_input_mode="NEVER", max_consecutive_auto_reply=5,code_execution_config={"use_docker":False})


@kql_writer.register_for_llm(description="Function for executing KQL query and returning a response")
@user_proxy.register_for_execution()
def execute_kql(
    reflection: Annotated[str, "Think about what to do"], kql: Annotated[str, "KQL query"]
) -> Annotated[Dict[str, str], "Dictionary with keys 'result' and 'error'"]:
    print(kql)
    observation, reward = 'hi', 1
    error = False#observation["feedback"]["error"]
    if not error and reward == 0:
        error = "The SQL query returned an incorrect result"
    if error:
        return {
            "error": error,
            "wrong_result": observation["feedback"]["result"],
            "correct_result": info["gold_result"],
        }
    else:
        return {
            "result": observation["feedback"]["result"],
        }


question="Today is 2024-06-30. Show me the total soiling loss percentage for past 30 days for each site in Singapore. Include site_name in the results"
message = f"""Below is the schema for a KQL database:
{TABLE_SCHEMA}
Generate a KQL query to answer the following question:
{question}
"""
chat_result = user_proxy.initiate_chat(kql_writer, message=message)
chat_result.cost
